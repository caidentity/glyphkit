@use '@/styles/kit' as *;

.viewer {
  display: flex;
  flex-direction: column;
  height: calc(100vh - 66px);
  background: var(--surface-primary);
  margin-top: 66px;
  overflow: hidden;
  position: relative;

  &-content {
    display: flex;
    flex: 1;
    overflow: hidden;
    height: 100%;
    position: relative;

    &__sidebar {
      width: 280px;
      flex-shrink: 0;
      border-right: 1px solid var(--divider-primary);
      overflow-y: auto;
      height: 100%;
    }

    &__main {
      flex: 1;
      overflow: auto;
      padding: var(--space-4);
      height: 100%;
      position: relative;
    }
  }

  &-header {
    width: 100%;
    padding: var(--space-4);
    background: var(--surface-primary);
    
    &__content {
      max-width: var(--container-width);
      margin: 0 auto;
      padding: 0 var(--space-4);
    }
    
    &__title {
      font-size: var(--text-2xl);
      font-weight: var(--font-bold);
      color: var(--text-primary);
      margin: 0 auto var(--space-2);
    }

    &__subtitle {
      color: var(--text-secondary);
      font-size: var(--text-base);

      &-highlight {
        color: var(--text-tertiary);
        margin-left: var(--space-2);
      }
    }
  }

  // Grid styles
  &-grid {
    display: grid;
    width: 100%;
    gap: 0;
    background: var(--surface-primary);
    padding: 0;
    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
    grid-auto-rows: 1fr;
    position: relative;

    // Make divider lines more visible and ensure they're rendered
    &::before {
      content: '';
      position: absolute;
      inset: 0;
      background-image: 
        linear-gradient(to right, var(--divider-primary) 1px, transparent 1px),
        linear-gradient(to bottom, var(--divider-primary) 1px, transparent 1px);
      background-size: calc(100% / var(--grid-columns, 5)) 100%, 100% calc(144px + var(--space-2) * 2);
      pointer-events: none;
      z-index: 1;
      opacity: 0.5;
    }

    &__item {
      position: relative;
      height: 100%;
      min-height: 144px;
      display: flex;
      flex-direction: column;
      cursor: pointer;
      transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
      padding: var(--space-2);
      z-index: 1;
      transform: scale(1);
      border: 1px solid transparent;
      
      &:hover {
        transform: scale(1.15) !important;
        z-index: 10;
        background: var(--surface-primary);
        border-radius: 8px;
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.2),
                    0 10px 10px -5px rgba(0, 0, 0, 0.1);
        border-color: var(--divider-primary);

        [data-theme="dark"] & {
          box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.5),
                      0 10px 10px -5px rgba(0, 0, 0, 0.4);
        }

        .viewer-grid__item-icon {
          transform: scale(1.1);
          transition: transform 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
        }

        .viewer-grid__item-actions {
          transform: translateY(0);
          opacity: 1;
          visibility: visible;
        }
      }
    }

    &__item-content {
      flex: 1;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      position: relative;
      padding-bottom: var(--space-6);
    }

    &__item-icon {
      flex: 1;
      display: flex;
      align-items: center;
      justify-content: center;
      color: var(--text-primary);
      transition: transform 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
      transform: scale(1);
    }

    &__item-name {
      font-size: 12px;
      color: var(--text-secondary);
      text-align: center;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      width: 100%;
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      padding: 0 var(--space-2);
    }

    &__item-actions {
      position: absolute;
      bottom: var(--space-6);
      left: 0;
      right: 0;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: var(--space-2);
      opacity: 0;
      visibility: hidden;
      transform: translateY(10px);
      transition: all 0.2s ease;
    }
  }

  // Grid size variants
  &-grid--small {
    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));

    .viewer-grid__item {
      min-height: 120px;
    }
  }

  &-grid--medium {
    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));

    .viewer-grid__item {
      min-height: 152px;
    }
  }

  &-grid--large {
    grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));

    .viewer-grid__item {
      min-height: 200px;
    }
  }

  // Container wrapper for centering
  &-grid-wrapper {
    width: 100%;
    background: var(--surface-primary);
    overflow: hidden;
    padding: 0;

    @include mobile {
      padding: 0;
    }
  }

  // Responsive adjustments
  @media (max-width: 1200px) {
    &-grid--small {
      grid-template-columns: repeat(5, 120px);
    }
  }

  @media (max-width: 1000px) {
    &-grid--small {
      grid-template-columns: repeat(4, 120px);
    }
    &-grid--medium {
      grid-template-columns: repeat(3, 180px);
    }
    &-grid--large {
      grid-template-columns: repeat(2, 240px);
    }
  }

  @media (max-width: 768px) {
    &-grid--small {
      grid-template-columns: repeat(3, 120px);
    }
    &-grid--medium {
      grid-template-columns: repeat(2, 180px);
    }
    &-grid--large {
      grid-template-columns: repeat(2, 200px);
    }
  }

  @media (max-width: 480px) {
    &-grid {
      gap: 0;
      
      &--small {
        grid-template-columns: repeat(2, 120px);
      }
      &--medium {
        grid-template-columns: repeat(2, 140px);
      }
      &--large {
        grid-template-columns: repeat(1, 200px);
      }
    }
  }

  // List view styles
  &-list {
    display: flex;
    flex-direction: column;
    gap: var(--space-2);
    padding: var(--space-4);

    &__item {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: var(--space-3);
      border-radius: 8px;
      border: 1px solid var(--divider-primary);
      background: var(--surface-primary);
      transition: all 0.2s;
      width: 100%;

      &:hover {
        border-color: var(--accent-primary);
        background: var(--surface-hover);
      }
    }

    &__item-content {
      display: flex;
      align-items: center;
      flex: 1;
    }

    &__item-icon {
      color: var(--text-primary);
      margin-right: var(--space-4);
      flex-shrink: 0;
    }

    &__item-name {
      flex: 1;
      font-size: var(--text-sm);
      color: var(--text-secondary);
      margin-right: var(--space-4);
    }

    &__item-actions {
      display: flex;
      gap: var(--space-2);
      margin-left: auto;
      opacity: 0;
      visibility: visible;
      transition: all 0.2s ease;
    }
  }

  // Mobile styles
  @include mobile {
    &-content {
      flex-direction: column;
      padding: 0;
      margin: 0;
      gap: 0;
    }

    &-content__sidebar {
      display: none;
    }

    &-content__main {
      border-radius: 0;
      border-left: 0;
      border-right: 0;
    }

    &-mobile-filter {
      display: block;
      padding: var(--space-4);
      background: var(--surface-primary);
      border-bottom: 1px solid var(--divider-primary);

      &__button {
        width: 100%;
        padding: var(--space-2) var(--space-4);
        border: 1px solid var(--divider-primary);
        border-radius: 8px;
        background: var(--surface-primary);
        color: var(--text-secondary);
        display: flex;
        align-items: center;
        justify-content: center;
        gap: var(--space-2);
        
        &:hover {
          background: var(--surface-hover);
          border-color: var(--accent-primary);
        }
      }
    }
  }

  @include desktop {
    &-mobile-filter {
      display: none;
    }
  }

  &.transitioning-from-home {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInFromHome 0.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;

    .viewer-search {
      animation: expandSearchBar 0.5s cubic-bezier(0.16, 1, 0.3, 1) forwards;
    }
  }
}

// Filter overlay for mobile
.viewer-filter-overlay {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.5);
  z-index: 50;
  display: flex;
  justify-content: flex-end;

  &__panel {
    width: 100%;
    max-width: 320px;
    background: var(--surface-primary);
    padding: var(--space-4);
    overflow-y: auto;
  }
}

// Alert styles
.viewer-alert {
  position: fixed;
  bottom: var(--space-4);
  right: var(--space-4);
  z-index: 40;
}

.icon-action-button {
  padding: var(--space-1) !important;
  min-width: unset !important;
  height: 24px !important;
  width: 24px !important;
  background: var(--surface-primary) !important;
  border: 1px solid var(--divider-primary) !important;

  &:hover {
    transform: translateY(-1px);
    border-color: var(--accent-primary) !important;
  }
}

.viewer-grid__item-actions,
.viewer-list__item-actions {
  .button {
    min-width: unset;
  }
}

// Update the hover state for grid items
.viewer-grid__item,
.viewer-list__item {
  &:hover {
    .viewer-grid__item-icon,
    .viewer-grid__item-name,
    .viewer-list__item-icon,
    .viewer-list__item-name {
      opacity: 1;
    }

    .viewer-grid__item-actions,
    .viewer-list__item-actions {
      opacity: 1;
      transform: translateY(0);
      visibility: visible;
    }
  }
}

// Remove any icon-specific label styles from Icon component
.icon {
  display: flex;
  align-items: center;
  justify-content: center;
  
  svg {
    width: 100%;
    height: 100%;
  }
}

.viewer-search {
  .input {
    height: 36px; // Slightly smaller for the viewer context
    background: var(--surface-secondary);
    
    &:focus {
      background: var(--surface-primary);
    }
  }
}

// Update the hover state styles
.viewer-grid__item,
.viewer-list__item {
  &:hover {
    .viewer-grid__item-actions,
    .viewer-list__item-actions {
      opacity: 1;
      transform: translateY(0);
      visibility: visible;
    }
  }
}

.viewer-grid__item-actions,
.viewer-list__item-actions {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  display: flex;
  gap: 0.5rem;
  padding: 0.5rem;
  background:var(--surface-primary);
  backdrop-filter: blur(4px);
  opacity: 0;
  transform: translateY(4px);
  transition: all 0.2s ease-in-out;
  justify-content: center;
  visibility: hidden;
  z-index: 10;
  
  .icon-action-button {
    padding: 0.5rem;
    height: 32px;
    width: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    
    &:hover {
      background-color: var(--surface-hover);
      transform: translateY(-1px);
    }
  }
}

// Tooltip styles
.tooltip-content {
  z-index: 50;
  background: var(--surface-primary);
  border: 1px solid var(--divider-primary);
  border-radius: 4px;
  padding: 0.5rem;
  font-size: 0.875rem;
  color: var(--text-primary);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

// Update detail panel action buttons
.icon-detail-panel__actions {
  .icon-action-button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    
    span {
      margin-left: 0.5rem;
    }
  }
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-1rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInFromHome {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes expandSearchBar {
  0% {
    max-width: 36rem;
    transform: translateY(calc(50vh - 60px));
  }
  100% {
    max-width: 100%;
    transform: translateY(0);
  }
}

// Ensure shadow variable is defined if not already
:root {
  --shadow-lg: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
}

// Add this to ensure the grid container properly handles the virtual items
.icon-viewer__grid {
  position: relative;
  width: 100%;
  height: 100%;
  
  .icon-viewer__row {
    position: absolute;
    left: 0;
    right: 0;
    display: flex;
    gap: 0;
  }
}
